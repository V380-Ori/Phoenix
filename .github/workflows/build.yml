name: Build release job

on:
  workflow_dispatch:
    inputs: {}

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  RYUJINX_BASE_VERSION: "1.3"
  RYUJINX_TARGET_RELEASE_CHANNEL_NAME: "release"
  RELEASE: 1
  EXTRA_ARGS: "-p:ExtraDefineConstants=DISABLE_UPDATER"

jobs:
  build:
    name: Build release for macOS (universal)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone V380-Ori/Ryujinx repository and use "update/molten-vk" branch (MR !142)
        run: |
          git clone https://git.ryujinx.app/v380ori/ryujinx
          cd ryujinx
          git checkout update/molten-vk
        shell: sh

      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: ryujinx/global.json

      - name: Install rcodesign
        run: |
          mkdir -p $HOME/.bin
          gh release download -R indygreg/apple-platform-rs -O apple-codesign.tar.gz -p 'apple-codesign-*-x86_64-unknown-linux-musl.tar.gz'
          tar -xzvf apple-codesign.tar.gz --wildcards '*/rcodesign' --strip-components=1
          rm apple-codesign.tar.gz
          mv rcodesign $HOME/.bin/
          echo "$HOME/.bin" >> $GITHUB_PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version info
        id: version_info
        run: |
          cd ryujinx
          echo "build_version=${{ env.RYUJINX_BASE_VERSION }}.${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "prev_build_version=${{ env.RYUJINX_BASE_VERSION }}.$((${{ github.run_number }} - 1))" >> $GITHUB_OUTPUT
          echo "git_short_hash=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
        shell: sh

      - name: Configure for release
        run: |
          cd ryujinx
          sed -r --in-place 's/\%\%RYUJINX_BUILD_VERSION\%\%/${{ steps.version_info.outputs.build_version }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_BUILD_GIT_HASH\%\%/${{ steps.version_info.outputs.git_short_hash }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_NAME\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_NAME }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_CONFIG_FILE_NAME\%\%/Config\.json/g;' src/Ryujinx.Common/ReleaseInformation.cs
        shell: bash

      - name: Build
        run: |
          cd ryujinx
          ./distribution/macos/create_macos_build_ava.sh . publish_tmp_ava publish ./distribution/macos/entitlements.xml "${{ steps.version_info.outputs.build_version }}" "${{ steps.version_info.outputs.git_short_hash }}" Release 0
        shell: sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ryubing-phoenix-macos_universal
          path: "ryujinx/publish/*.tar.gz"
